{"version":3,"sources":["store/users/types.ts","components/List/UsersTableRow.tsx","components/List/UsersTable.tsx","store/users/actions.ts","utils/callGithubApi.ts","store/users/thunks.ts","components/List/UsersPagination.tsx","components/List/UsersListPage.tsx","components/View/UserDetailItem.tsx","components/View/UserDetails.tsx","components/View/UserViewPage.tsx","NotFoundPage.tsx","components/App.tsx","components/Root.tsx","store/users/reducer.ts","store/index.ts","serviceWorker.js","index.tsx","configureStore.ts"],"names":["UsersActionTypes","DictionariesTableRow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","user","row","_this$user","id","login","avatar_url","react_default","a","createElement","TableRow_default","TableCell_default","scope","Link","to","concat","className","src","alt","Component","withStyles","theme","createStyles","root","width","marginTop","spacing","unit","overflowX","table","minWidth","classes","rows","Paper_default","Table_default","TableHead_default","component","TableBody_default","map","idx","List_UsersTableRow","key","fetchUsersRequest","action","FETCH_USERS_REQUEST","fetchUsersSuccess","data","FETCH_USERS_SUCCESS","fetchUsersError","message","FETCH_USERS_ERROR","fetchUserRequest","FETCH_USER_REQUEST","fetchUserSuccess","FETCH_USER_SUCCESS","fetchUserError","FETCH_USER_ERROR","noOp","NO_OP","BASE_URL","USERS_PATH","calcPrevUsersPage","firstUserId","toString","callGithubApiUsers","_callGithubApiUsers","apply","arguments","_callee","since","query","url","res","users","pageNextUserId","pagePrevUserId","linkHeader","parseResults","_args","regenerator_default","wrap","_context","prev","next","length","undefined","fetch","headers","Accept","sent","ok","Error","statusText","json","get","parse","abrupt","stop","callGithubApiUser","_callGithubApiUser","_callee2","_args2","_context2","existsFullUser","find","u","hasOwnProperty","UsersPagination","prevPageButtonDisabled","Tooltip_default","title","IconButton_default","_ref","innerRef","objectWithoutProperties","assign","disabled","aria-label","ChevronLeft_default","_ref2","ChevronRight_default","UserListPage","unlisten","queryString","qs","dispatch","asyncToGenerator","mark","response","t0","_x","usersFetch","_this2","fetchUsers","location","search","history","listen","pathname","prevProps","window","scrollTo","List_UsersTable","UsersPagination_UsersPagination","connect","state","UserDetailItem","valueMarkup","_props$item","item","field","value","endsWith","href","target","UserDetails","infoItems","keys","k","infoItem","UserViewPage","getState","_x2","_x3","userFetch","fetchUser","match","params","userlogin","content","components_View_UserDetails","ownProps","_","NotFoundPage","App","Switch","Route","exact","path","UsersListPage","Root","es","store","BrowserRouter","basename","process","initialState","loading","error","lastSuccessfullSinceId","updateOrAddUser","newUser","findIndex","toConsumableArray","slice","usersInitialState","rootReducer","combineReducers","type","objectSpread","payload","errors","Boolean","hostname","composeEnhancers","composeWithDevTools","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","components_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2f8c595.chunk.js","sourcesContent":["export type ApiResponse = Record<string, any>\n\nexport interface User extends ApiResponse{\n  login: string,\n  id: number,\n  node_id: string,\n  avatar_url: string,\n  gravatar_id: string,\n  url: string,\n  html_url: string,\n  followers_url: string,\n  following_url: string,\n  gists_url: string,\n  starred_url: string,\n  subscriptions_url: string,\n  organizations_url: string,\n  repos_url: string,\n  events_url: string,\n  received_events_url: string,\n  type: string,\n  site_admin: boolean,\n  // properties after site_admin are available\n  // only when requesting a specific user\n  name?: string,\n  company?: string,\n  blog?: string,\n  location?: string,\n  email?: string | null,\n  hireable?: boolean,\n  bio?: string,\n  public_repos?: number,\n  public_gists?: number,\n  followers?: number,\n  following?: number,\n  created_at?: string,\n  updated_at?: string\n}\n\nexport enum UsersActionTypes {\n  FETCH_USERS_REQUEST = '@@user/FETCH_USERS_REQUEST',\n  FETCH_USERS_SUCCESS = '@@user/FETCH_USERS_SUCCESS',\n  FETCH_USERS_ERROR = '@@user/FETCH_USERS_ERROR',\n  FETCH_USER_REQUEST = '@@user/FETCH_USER_REQUEST',\n  FETCH_USER_SUCCESS = '@@user/FETCH_USER_SUCCESS',\n  FETCH_USER_ERROR = '@@user/FETCH_USER_ERROR',\n  NO_OP = '@@user/NO_OP'\n}\n\nexport interface UsersState {\n  readonly data: User[],\n  readonly loading: boolean,\n  readonly error: Error | void,\n  readonly lastSuccessfullSinceId: string, // we need this for pagination\n  readonly pagePrevUserId: string,\n  readonly pageNextUserId: string,\n}\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { Link } from 'react-router-dom';\nimport { User } from '../../store/users/types';\n\nimport './UsersTableRow.css';\n\ninterface ownProps {\n  row: User;\n}\n\ntype allProps = ownProps;\n\nclass DictionariesTableRow extends Component<allProps> {\n  private user: User;\n\n  constructor(props: allProps) {\n    super(props);\n\n    this.user = this.props.row;\n  }\n\n  render() {\n    const {id, login, avatar_url} = this.user;\n    return (\n      <TableRow>\n        <TableCell scope=\"row\">\n          {id}\n        </TableCell>\n        <TableCell>\n          <Link to={`/users/${login}`}>\n            <img className=\"avatar-img\" src={avatar_url} alt={`${login} avatar`} />\n          </Link>\n        </TableCell>\n        <TableCell>{login}</TableCell>\n      </TableRow>\n    );\n  }\n}\n\nexport default DictionariesTableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport Paper from '@material-ui/core/Paper';\nimport { User } from '../../store/users/types';\nimport UsersTableRow from './UsersTableRow';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 300\n    }\n  });\n\ninterface PropsFromMaterialUi {\n  classes: any;\n}\n\ninterface OwnProps {\n  rows: User[];\n}\n\ntype AllProps = PropsFromMaterialUi & OwnProps;\n\nconst UsersTable = (props: AllProps) => {\n  const { classes, rows } = props;\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <colgroup>\n          <col width=\"120px\" />\n          <col width=\"120px\" />\n          <col />\n        </colgroup>\n        <TableHead>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">User id</TableCell>\n            <TableCell component=\"th\" scope=\"row\">Avatar</TableCell>\n            <TableCell component=\"th\" scope=\"row\">Login</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((user, idx) => {\n            return <UsersTableRow row={user} key={user.id} />;\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\nUsersTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(UsersTable);\n","import { ActionType, action } from 'typesafe-actions';\nimport { UsersActionTypes, User } from './types';\nimport {IGithubAPIUsersResponse} from '../../utils/callGithubApi';\nimport { AnyAction } from 'redux';\n\nexport const fetchUsersRequest = () => action(UsersActionTypes.FETCH_USERS_REQUEST);\nexport type FetchUsersRequestAction = ActionType<typeof fetchUsersRequest>;\n\nexport const fetchUsersSuccess = (data: IGithubAPIUsersResponse) =>\n  action(UsersActionTypes.FETCH_USERS_SUCCESS, data);\nexport type FetchUsersSuccessAction = ActionType<typeof fetchUsersSuccess>;\n\nexport const fetchUsersError = (message: string) =>\n  action(UsersActionTypes.FETCH_USERS_ERROR, message);\n\nexport const fetchUserRequest = () => action(UsersActionTypes.FETCH_USER_REQUEST);\nexport type FetchRequestAction = ActionType<typeof fetchUserRequest>;\n\nexport const fetchUserSuccess = (data: User) =>\n  action(UsersActionTypes.FETCH_USER_SUCCESS, data);\nexport type FetchSuccessAction = ActionType<typeof fetchUserSuccess>;\n\nexport const fetchUserError = (message: string) =>\n  action(UsersActionTypes.FETCH_USER_ERROR, message);\n\nexport const noOp = () => action(UsersActionTypes.NO_OP);\nexport type NoOpAction = ActionType<typeof noOp>;\n\n\nconst userActions = {\n  fetchUsersRequest,\n  fetchUsersSuccess,\n  fetchUsersError,\n  fetchUserRequest,\n  fetchUserSuccess,\n  fetchUserError,\n  noOp\n}\n\nexport type UsersAction = ActionType<typeof userActions>;\n\n\n","import parse from 'parse-link-header';\nimport { User } from '../store/users/types';\n\nconst BASE_URL: string = 'https://api.github.com';\nconst USERS_PATH: string = '/users';\nconst USERS_PER_PAGE: number = 30; //determined by github\n\nexport interface IGithubAPIUsersResponse {\n  users: User[];\n  since: string,\n  pagePrevUserId: string;\n  pageNextUserId: string;\n}\n\n// github doesn't provide a `previous` page link. Since we display\n// 30 users per page we just ask for the id of the first user -30.\n// Of course this doesn't guarantee that we will get 30 users that\n// are different from the current ones being displayed since there\n// are ids that are missing.\nconst calcPrevUsersPage = function (firstUserId: number): string{\n\n  if((firstUserId - USERS_PER_PAGE) <= 0 ) return '';\n  \n  // even if the resulting id doesn't not exist, \n  // as long as its over '0', github is smart enough\n  // to start its results from the next existing one\n  return (firstUserId - USERS_PER_PAGE).toString();\n}\n\nexport async function callGithubApiUsers(\n  since: string = ''\n): Promise<IGithubAPIUsersResponse> {\n  // check if we need to start from specific user\n  const query = since === '' ? '' : `?since=${since}`;\n\n  const url = `${BASE_URL}${USERS_PATH}${query}`;\n\n  const res = await fetch(url, {\n    headers: {\n      Accept: 'application/vnd.github.v3+json'\n    }\n  });\n\n  if (!res.ok) {\n    throw Error(res.statusText);\n  }\n\n  const users: User[] = await res.json();\n\n  // \"link \"header contains the user id of the next (we care)\n  // and the first (we currently don't care) page\n  let pageNextUserId: string = '';\n  let pagePrevUserId: string = '';\n  const linkHeader = res.headers.get('link') || '';\n  const parseResults = parse(linkHeader);\n\n  if (parseResults && parseResults.next && parseResults.next.since) {\n    pageNextUserId = parseResults.next.since;\n  }\n\n\n  if(users[0]){\n    pagePrevUserId = calcPrevUsersPage(users[0].id);\n  }\n\n  return {\n    users,\n    since,\n    pageNextUserId,\n    pagePrevUserId\n  };\n}\n\nexport async function callGithubApiUser(\n  login: string = ''\n): Promise<User> {\n  const url = `${BASE_URL}${USERS_PATH}/${login}`;\n  \n  const res = await fetch(url, {\n    headers: {\n      Accept: 'application/vnd.github.v3+json'\n    }\n  });\n\n  if (!res.ok) {\n    throw Error(res.statusText);\n  }\n\n  const user: User = await res.json();\n\n  return user;\n}\n","import { Dispatch, ActionCreator } from 'redux';\nimport {\n  fetchUsersRequest,\n  fetchUsersSuccess,\n  fetchUsersError,\n  fetchUserRequest,\n  fetchUserSuccess,\n  fetchUserError,\n  UsersAction,\n  noOp\n} from './actions';\nimport { ThunkAction } from 'redux-thunk';\nimport { ApplicationState } from '..';\nimport {\n  IGithubAPIUsersResponse,\n  callGithubApiUsers,\n  callGithubApiUser\n} from '../../utils/callGithubApi';\nimport { User } from './types';\n\n// To if we have the full info on a user, we check if the `name` property\n// exists which is one of the properties that we get\n// when query for the full info of a user\nfunction existsFullUser(users: User[], login: string): boolean {\n  const user = users.find(u => u.login === login && u.hasOwnProperty('name'));\n  return !(user === undefined);\n}\n\nexport const usersFetch: ActionCreator<\n  ThunkAction<Promise<UsersAction>, ApplicationState, void, UsersAction>\n> = (since: string) => {\n  return async (dispatch: Dispatch): Promise<UsersAction> => {\n    try {\n      dispatch(fetchUsersRequest());\n\n      const response: IGithubAPIUsersResponse = await callGithubApiUsers(since);\n      return dispatch(fetchUsersSuccess(response));\n    } catch (err) {\n      return dispatch(fetchUsersError(err.message));\n    }\n  };\n};\n\nexport const userFetch: ActionCreator<\n  ThunkAction<Promise<UsersAction>, ApplicationState, void, UsersAction>\n> = (login: string) => {\n  return async (dispatch: Dispatch, getState): Promise<UsersAction> => {\n    try {\n      // check if the user exists with their full info before fetching them.\n      const users: User[] = getState().users.data;\n\n      if (existsFullUser(users, login)) {\n        return dispatch(noOp());\n      }\n\n      dispatch(fetchUserRequest());\n\n      const response: User = await callGithubApiUser(login);\n      return dispatch(fetchUserSuccess(response));\n    } catch (err) {\n      return dispatch(fetchUserError(err.message));\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Link } from 'react-router-dom';\n\nimport './UsersPagination.css';\n\ninterface ownProps {\n  since: string;\n  pagePrevUserId: string;\n  pageNextUserId: string;\n}\n\ntype allProps = ownProps;\n\nexport default class UsersPagination extends Component<allProps> {\n  constructor(props: allProps) {\n    super(props);\n  }\n\n  render() {\n    // disable button only if we have already requested the start page right before\n    const prevPageButtonDisabled: boolean =\n      this.props.pagePrevUserId === '' && this.props.since === '';\n\n    return (\n      <div className=\"pagination-container\">\n        {/* The reason we pass the component as a function is incompatibility\n          of the types of material-ui components. See:\n          https://github.com/mui-org/material-ui/issues/8598#issuecomment-399166441\n           */}\n        <Tooltip title=\"Previous page\">\n          <IconButton\n            component={({ innerRef, ...props }) => (\n              <Link\n                {...props}\n                to={`/users?since=${this.props.pagePrevUserId}`}\n              />\n            )}\n            disabled={prevPageButtonDisabled}\n            aria-label=\"Previous page\"\n          >\n            <ChevronLeftIcon />\n          </IconButton>\n        </Tooltip>\n\n        <Tooltip title=\"Next page\">\n          <IconButton\n            component={({ innerRef, ...props }) => (\n              <Link\n                {...props}\n                to={`/users?since=${this.props.pageNextUserId}`}\n              />\n            )}\n            aria-label=\"Next page\"\n          >\n            <ChevronRightIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Dispatch, Store } from 'redux';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport UsersTable from './UsersTable';\nimport { usersFetch } from '../../store/users/thunks';\nimport { ApplicationState } from '../../store';\nimport { User } from '../../store/users/types';\nimport { UsersAction } from '../../store/users/actions';\nimport UsersPagination from './UsersPagination';\nimport { RouteComponentProps } from 'react-router-dom';\nimport qs from 'query-string';\n\ninterface PropsFromRedux {\n  dispatch: ThunkDispatch<ApplicationState, any, UsersAction>;\n}\n\ninterface PropsFromState {\n  users: User[];\n  since: string;\n  pagePrevUserId: string;\n  pageNextUserId: string;\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  users: state.users.data,\n\n  pagePrevUserId: state.users.pagePrevUserId,\n  pageNextUserId: state.users.pageNextUserId\n});\n\ntype allProps = RouteComponentProps & PropsFromState & PropsFromRedux;\n\nclass UserListPage extends Component<allProps> {\n  private unlisten: Function = () => {};\n\n  constructor(props: allProps) {\n    super(props);\n  }\n\n  fetchUsers(queryString: string) {\n    const since = qs.parse(queryString).since || '';\n    this.props.dispatch(usersFetch(since));\n  }\n\n  componentDidMount() {\n    this.fetchUsers(this.props.location.search);\n\n    this.unlisten = this.props.history.listen((location, action) => {\n      // we only care for changes in the /users page\n      if (!(location.pathname === '/users' || location.pathname === '/users/'))\n        return;\n      this.fetchUsers(location.search);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  componentDidUpdate(prevProps: allProps){\n    if(prevProps.users.length > 0 && this.props.users.length > 0){\n      if(prevProps.users[0].id !== this.props.users[0].id){\n        // make sure we scroll to the start of the page when the users\n        // change\n        window.scrollTo(0,0);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <h1>React Github Users App</h1>\n        </header>\n        <UsersTable rows={this.props.users} />\n        <UsersPagination\n          since={this.props.since}\n          pagePrevUserId={this.props.pagePrevUserId}\n          pageNextUserId={this.props.pageNextUserId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(UserListPage);\n","import React, { Component } from \"react\";\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\ninterface Item{\n  field: string,\n  value: string|number\n}\n\ninterface OwnProps{\n  item: Item\n}\n\nexport default function UserDetailItem(props:OwnProps){\n  const {field, value} = props.item;\n  let valueMarkup;\n\n  // all urls in the user github API end with URL\n  if(field.endsWith('url')){\n    valueMarkup= <a href={value as string} target=\"_blank\">{value}</a>\n  }else{\n    valueMarkup = value;\n  }\n\n  return(\n    <TableRow>\n        <TableCell component=\"td\" scope=\"row\">\n          {field}\n        </TableCell>\n        <TableCell>{valueMarkup}</TableCell>\n      </TableRow>\n  )\n}\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport Paper from '@material-ui/core/Paper';\nimport { User } from '../../store/users/types';\nimport UserDetailItem from './UserDetailItem';\nimport { ClassNameMap, WithStyles } from '@material-ui/core/styles/withStyles';\nimport './UserDetails.css';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    }\n  });\n\ninterface OwnProps {\n  user: User;\n}\n\ntype allProps = OwnProps & WithStyles<typeof styles>;\n\nclass UserDetails extends Component<allProps> {\n  render() {\n    const infoItems = Object.keys(this.props.user).map((k, idx) => ({\n      field: k,\n      value: this.props.user[k]\n    }));\n\n    return (\n      <div>\n        <header className=\"user-header \">\n          <div className=\"user-header-img-container\">\n            <img\n              src={this.props.user.avatar_url}\n              alt={`${this.props.user.login} avatar`}\n            />\n          </div>\n          <h1>{this.props.user.login}</h1>\n        </header>\n\n        <Paper className={this.props.classes.root}>\n          <Table className={this.props.classes.table}>\n            <colgroup>\n              <col width=\"150px\" />\n              <col width=\"120px\" />\n            </colgroup>\n            <TableBody>\n              {infoItems.map((infoItem, idx) => {\n                return (\n                  <UserDetailItem\n                    item={infoItem}\n                    key={this.props.user.id.toString() + idx.toString()}\n                  />\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(UserDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport _ from 'lodash';\nimport './UserViewPage.css';\nimport { ApplicationState } from '../../store';\nimport { RouteComponentProps } from 'react-router';\nimport { User } from '../../store/users/types';\nimport UserDetails from './UserDetails';\nimport { userFetch } from '../../store/users/thunks';\nimport { UsersAction } from '../../store/users/actions';\n\ninterface PropsFromRedux {\n  dispatch: ThunkDispatch<ApplicationState, any, UsersAction>;\n}\n\ntype RouteParams = {\n  userlogin: string;\n};\n\ninterface PropsFromState {\n  user: User | undefined;\n}\n\ntype allProps = RouteComponentProps<RouteParams> &\n  React.Props<RouteParams> &\n  PropsFromState &\n  PropsFromRedux;\n\nconst mapStateToProps = (state: ApplicationState, ownProps: allProps) => ({\n  // we search for the user if they are already in the cache\n  user: _.find(state.users.data, {\n    login: ownProps.match.params.userlogin\n  }) as User\n});\n\nclass UserViewPage extends Component<allProps, ApplicationState> {\n  constructor(props: allProps) {\n    super(props);\n  }\n\n  fetchUser(login: string) {\n    this.props.dispatch(userFetch(login));\n  }\n\n  componentDidMount() {\n    this.fetchUser(this.props.match.params.userlogin)\n  }\n\n  render() {\n    let content;\n    if (this.props.user) {\n      content = <UserDetails user={this.props.user} />;\n    } else {\n      content = <div className=\"loading-msg\">Loading</div>;\n    }\n    return <div>{content}</div>;\n  }\n}\n\nexport default connect(mapStateToProps)(UserViewPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <h1>React Dictionary App</h1>\n      </header>\n      <div>\n        <h2>404 - Not found</h2>\n        <Link to=\"/\">Return to the home page</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport UsersListPage from './List/UsersListPage';\nimport UserViewPage from './View/UserViewPage';\n\nimport NotFoundPage from '../NotFoundPage';\nimport './App.css';\n\ninterface IAppProps {\n  classes: any;\n}\n\nclass App extends Component {\n  private classes: any;\n\n  constructor(props: IAppProps) {\n    super(props);\n    this.classes = props.classes;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={UsersListPage} />\n          <Route exact path=\"/users/\" component={UsersListPage} />\n          <Route exact path=\"/users/:userlogin\" component={UserViewPage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Store } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport {ApplicationState} from '../store';\nimport App from './App';\n\ninterface OwnProps{\n  store: Store<ApplicationState>\n}\n\nconst Root = (props: OwnProps) => (\n  <Provider store={props.store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </Provider>\n);\n\nexport default Root;\n","import { Reducer } from 'redux';\nimport { UsersState, UsersActionTypes, User } from './types';\n\nexport const initialState: UsersState = {\n  data: [],\n  loading: false,\n  error: undefined,\n  lastSuccessfullSinceId: '',\n  pagePrevUserId: '',\n  pageNextUserId: ''\n};\n\n\nfunction updateOrAddUser(users: User[] , newUser: User){\n  const idx = users.findIndex(user => user.login === newUser.login )\n\n  if (idx !== -1){\n    return [\n      ...users.slice(0, idx),\n      newUser,\n      ...users.slice(0, idx + 1)\n    ];\n  }\n\n  return [...users, newUser];\n}\n\n\nconst reducer: Reducer<UsersState> = (state = initialState, action) => {\n  switch (action.type) {\n    case UsersActionTypes.FETCH_USERS_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case UsersActionTypes.FETCH_USERS_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.users,\n        lastSuccessfullSinceId: action.payload.since,\n        pagePrevUserId: action.payload.pagePrevUserId,\n        pageNextUserId: action.payload.pageNextUserId\n      };\n    }\n    case UsersActionTypes.FETCH_USERS_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    case UsersActionTypes.FETCH_USER_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case UsersActionTypes.FETCH_USER_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        data: updateOrAddUser(state.data, action.payload),\n      };\n    }\n    case UsersActionTypes.FETCH_USER_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { reducer as usersReducer };\n","import { combineReducers } from 'redux';\nimport { UsersState } from './users/types';\nimport { initialState as usersInitialState, usersReducer } from './users/reducer';\n\n\nexport interface ApplicationState {\n  users: UsersState;\n}\n\nexport const initialState = {\n  users: usersInitialState\n}\n\nexport const rootReducer = combineReducers<ApplicationState>({\n  users: usersReducer\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Root from './components/Root';\nimport { initialState } from './store';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './configureStore';\n\nconst store = configureStore(initialState);\n\nReactDOM.render(<Root store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Store, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport { ApplicationState, rootReducer } from './store';\n\nexport default function configureStore(\n  initialState: ApplicationState\n): Store<ApplicationState> {\n  const composeEnhancers = composeWithDevTools({});\n\n  const store: Store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  return store;\n}\n"],"sourceRoot":""}